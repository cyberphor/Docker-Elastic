services:
  elasticsearch:
    build: elasticsearch
    image: docker-elastic/elasticsearch:v1.0.0
    container_name: elasticsearch
    env_file:
      - .env
    volumes:
      - certs:/usr/share/elasticsearch/config/certs/
    networks:
      - elastic
    ports:
      - 9200:9200
    #healthcheck:
    #  test: [ "CMD-SHELL", "test -f config/certs/ca.crt" ]
    #  interval: 10s
    #  timeout: 10s
    #  retries: 3
  kibana:
    #depends_on:
    #  elasticsearch:
    #    condition: service_healthy
    build: kibana
    image: docker-elastic/kibana:v1.0.0
    container_name: kibana
    env_file:
      - .env
    volumes:
      - certs:/usr/share/kibana/config/certs/
    ports:
      - 5601:5601
    #healthcheck:
      # current healthcheck until HTTPS is enabled/enforced when accessing Kibana
      # TODO: address accepting "self-signed" certificate notification when accessing HTTPS-enabled Kibana
    #  test: [ "CMD-SHELL", "curl http://localhost:${KIBANA_PORT} -I -s | grep -q 'HTTP/1.1 302 Found'", ]
  #logstash:
  #  depends_on: 
  #    kibana:
  #      condition: "service_healthy"
  #  build: logstash
  #  image: logstash:latest
  #  container_name: logstash
  #  env_file:
  #    - .env
  #  volumes:
  #    - certs:/opt/logstash/config/certs/
  #elastalert:
  #  depends_on: 
  #    logstash:
  #      condition: "service_healthy"
  #  build: elastalert
  #  image: elastalert:latest
  #  container_name: elastalert
  #  env_file:
  #    - .env
  #  volumes:
  #    - certs:/opt/elastalert/certs/
volumes:
  certs:
    name: certs
networks:
  elastic: